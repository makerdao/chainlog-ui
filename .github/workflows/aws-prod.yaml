on:
  push:
    branches:
      - main

name: Deploy to AWS Production

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      CLUSTER_NAME: chainlog-prod

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Extract commit hash
      id: vars
      shell: bash
      run: |
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        SHA_TAG: ${{ steps.vars.outputs.sha_short }}
        LATEST_TAG: latest
        ENVIRONMENT_TAG: prod
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        # Build Docker containers and
        # push them to ECR:
        # - chainlog-ui
        docker pull $ECR_REGISTRY/chainlog-ui-prod:$LATEST_TAG
        docker build -t chainlog-ui-prod \
                     -t $ECR_REGISTRY/chainlog-ui-prod:$SHA_TAG \
                     -t $ECR_REGISTRY/chainlog-ui-prod:$LATEST_TAG \
                     -t $ECR_REGISTRY/chainlog-ui-prod:$ENVIRONMENT_TAG \
                     -f Dockerfile.ui \
                     .
        docker push $ECR_REGISTRY/chainlog-ui-prod --all-tags
        # - chainlog-checksum
        docker pull $ECR_REGISTRY/chainlog-checksum-prod:$LATEST_TAG
        docker build -t chainlog-checksum-prod \
                     -t $ECR_REGISTRY/chainlog-checksum-prod:$SHA_TAG \
                     -t $ECR_REGISTRY/chainlog-checksum-prod:$LATEST_TAG \
                     -t $ECR_REGISTRY/chainlog-checksum-prod:$ENVIRONMENT_TAG \
                     -f Dockerfile.checksum \
                     .
        docker push $ECR_REGISTRY/chainlog-checksum-prod --all-tags
        # - chainlog-logger
        docker pull $ECR_REGISTRY/chainlog-logger-prod:$LATEST_TAG
        docker build -t chainlog-logger-prod \
                     -t $ECR_REGISTRY/chainlog-logger-prod:$SHA_TAG \
                     -t $ECR_REGISTRY/chainlog-logger-prod:$LATEST_TAG \
                     -t $ECR_REGISTRY/chainlog-logger-prod:$ENVIRONMENT_TAG \
                     -f Dockerfile.logger \
                     .
        docker push $ECR_REGISTRY/chainlog-logger-prod --all-tags

    - name: Update ECS service with latest Docker image
      id: service-update
      run: |
        aws ecs update-service --cluster $CLUSTER_NAME --service chainlog-ui-prod --force-new-deployment --region $AWS_REGION > /dev/null
        aws ecs update-service --cluster $CLUSTER_NAME --service chainlog-logger-prod --force-new-deployment --region $AWS_REGION > /dev/null

    - name: Wait for all services to become stable
      uses: oryanmoshe/ecs-wait-action@v1.3
      with:
        ecs-cluster: ${{ env.CLUSTER_NAME }}
        ecs-services: '["chainlog-ui-prod", "chainlog-logger-prod"]'
